/*
// Employee info
class Employee {
    // It's the unique id of each node;
    // unique id of this employee
    public int id;
    // the importance value of this employee
    public int importance;
    // the id of direct subordinates
    public List<Integer> subordinates;
};
*/
class Solution {
    public int getImportance(List<Employee> employees, int id) {
        Queue<Employee> queue = new LinkedList<>();
        Map<Integer, Employee> map = new HashMap();
        for(Employee emp : employees)
            map.put(emp.id, emp);
        
        int imp = 0;
        queue.add(map.get(id));
        while(!queue.isEmpty()) {
            Employee curr = queue.remove();
            imp += curr.importance;
            for(int i : curr.subordinates)
                queue.add(map.get(i));
        }
        
        return imp;
    }
}
